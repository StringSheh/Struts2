<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/data/jpa
	http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">
	
	<!-- spring读取db.properties文件 -->
	<!-- 
	location:读取的文件路径
	 -->
	<context:property-placeholder location="classpath:jdbc.properties"/>
	
	<!-- 1.建立数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"/>
		<property name="driverClass" value="${jdbc.driverClass}"/>
		<property name="user" value="${jdbc.user}"/>
		<property name="password" value="${jdbc.password}"/>
	</bean>
	
	<!-- 2.创建SessinoFactory -->
	<!-- <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>
			</props>
		</property>
		JPA注解
		<property name="packagesToScan">
			<array>
				<value>com.itheima.bos.domain</value>
			</array>
		</property>
	</bean> -->
	
	
	
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<!-- JPA的具体实现配置
		  JPA是ORM标准，下面有hibernate，openJPA，topLinkORM实现
		 -->
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<!-- hibernate配置信息 -->
				<property name="showSql" value="true"/>
				<!-- <property name="generateDdl" value="true"/> -->
				<property name="databasePlatform" value="org.hibernate.dialect.Oracle10gDialect"/>
			</bean>
		</property>
		<property name="packagesToScan">
			<array>
				<value>com.itheima.crm.domain</value>
			</array>
		</property>
	</bean>
	
	
	<!-- 3.1 开启事务注解 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	<!-- 3.2 事务管理器 -->
	<!-- <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean> -->
	
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"/>
	</bean>
	
	
	<!-- 4.开启IOC注解 -->
	<context:component-scan base-package="com.itheima"/>
	
	<!-- spring data jpa扫描包配置 
		base-package: Dao接口所在的包
	-->
	<jpa:repositories base-package="com.itheima.crm.dao"/>
	
</beans>